name: Fetch Data

on:
  push:
    branches:
      - '*'

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    
    steps:
      - name: Checkout project
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: '3.10'

      - name: Create virtual environment
        run: |
          python3 -m venv venv

      - name: Activate virtual environment
        run: |
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run reformat.py
        id: reformat
        run: |
          if python3 reformat.py; then
            echo "reformat_success=true" >> $GITHUB_OUTPUT
          else
            echo "reformat_success=false" >> $GITHUB_OUTPUT
          fi

      - name: Print reformatted data
        run: |
          echo "Contents of app-ads.txt after reformat:"
          cat app-ads.txt

      - name: Commit changes
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add app-ads.txt
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changes_made=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Auto-reformat app-ads.txt"
            echo "changes_made=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.commit.outputs.changes_made == 'true'
        uses: ad-m/github-push-action@d91a481090679876dfc4178fef17f286781251df  #v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}



  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    needs: fetch-data
    if: github.ref == 'refs/heads/main'
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Pull latest changes
        run: git pull origin ${{ github.ref }}

      - name: Print reformatted data
        run: |
          echo "Contents of app-ads.txt in deploy job:"
          cat app-ads.txt
      
  #     - name: Assume role (ignoring OIDC warning)
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-region: ap-south-1
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
  #         role-duration-seconds: 900

  #     - name: Upload file to S3 bucket
  #       run: |
  #         aws s3 cp ${{ matrix.repositories.src }} s3://${{ matrix.repositories.url }} --region ap-south-1

  #     - name: Invalidate cache
  #       run: |
  #         aws cloudfront create-invalidation --distribution-id ${{ matrix.repositories.distribution }} --paths "/app-ads.txt"

