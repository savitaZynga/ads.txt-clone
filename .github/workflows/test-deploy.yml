name: Fetch Data

on:
  # schedule:        #every hour
  #   cron: "0 * * * *"
  push:
    paths:
      - 'app-ads.txt'
    # branches:
      # - main  #change it to run periodically
  # repository_dispatch:
  #   types: [fetch app-ads data from google sheet]

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Create virtual environment
        run: |
          python3 -m venv venv

      - name: Activate virtual environment
        run: |
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run reformat.py
        run: |
          python3 reformat.py

      - name: Print reformatted data
        run: |
          echo "Contents of app-ads.txt after reformat:"
          cat app-ads.txt

      - name: Commit changes
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add app-ads.txt
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changes_made=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Auto-reformat app-ads.txt"
            echo "changes_made=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.commit.outputs.changes_made == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}


  # deploy:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: write
  #   needs: fetch-data
  
  #   strategy:
  #     matrix:
  #       repositories:
  #         - { url: "zsocial", distribution: E2E4QWZ2AU633H, src: "./app-ads.txt", role_arn: "arn:aws:iam::060454969817:role/zoscial-github-webhook" }
          
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
      
  #     - name: Assume role (ignoring OIDC warning)
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-region: ap-south-1
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
  #         role-duration-seconds: 900

  #     - name: Upload file to S3 bucket
  #       run: |
  #         aws s3 cp ${{ matrix.repositories.src }} s3://${{ matrix.repositories.url }} --region ap-south-1

  #     - name: Invalidate cache
  #       run: |
  #         aws cloudfront create-invalidation --distribution-id ${{ matrix.repositories.distribution }} --paths "/app-ads.txt"

